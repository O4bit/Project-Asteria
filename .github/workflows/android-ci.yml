name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      runLint:
        description: "Run lint tasks"
        required: false
        default: "true"
      runTests:
        description: "Run unit tests"
        required: false
        default: "true"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Disable Crashlytics mapping upload in CI to avoid network/credentials issues
      GRADLE_ARGS: -PfirebaseCrashlyticsMappingFileUploadEnabled=false --no-daemon --stacktrace

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          if [ -n "${NASA_API_KEY}" ]; then
            echo "nasa.api.key=${NASA_API_KEY}" >> local.properties
          fi
        env:
          NASA_API_KEY: ${{ secrets.NASA_API_KEY }}

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Debug and Release
        run: |
          ./gradlew clean :app:assembleDebug :app:assembleRelease $GRADLE_ARGS

      - name: Lint (Debug/Release)
        run: |
          ./gradlew :app:lintDebug :app:lintRelease $GRADLE_ARGS || true

      - name: Run unit tests (if any)
        run: |
          ./gradlew :app:testDebugUnitTest :app:testReleaseUnitTest $GRADLE_ARGS || true

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Install Firebase CLI (optional for App Distribution)
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_APP_ID_DEBUG: ${{ secrets.FIREBASE_APP_ID_DEBUG }}
          FIREBASE_APP_ID_RELEASE: ${{ secrets.FIREBASE_APP_ID_RELEASE }}
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          if { [ -n "${FIREBASE_APP_ID}" ] || [ -n "${FIREBASE_APP_ID_DEBUG}" ] || [ -n "${FIREBASE_APP_ID_RELEASE}" ]; } \
             && { [ -n "${FIREBASE_SERVICE_ACCOUNT_JSON}" ] || [ -n "${FIREBASE_TOKEN}" ]; }; then
            npm install -g firebase-tools
          else
            echo "Skipping Firebase CLI install (missing FIREBASE_APP_ID[_DEBUG|_RELEASE] or credentials)"
          fi

      - name: Configure Firebase credentials (service account or token)
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_APP_ID_DEBUG: ${{ secrets.FIREBASE_APP_ID_DEBUG }}
          FIREBASE_APP_ID_RELEASE: ${{ secrets.FIREBASE_APP_ID_RELEASE }}
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          if { [ -n "${FIREBASE_APP_ID}" ] || [ -n "${FIREBASE_APP_ID_DEBUG}" ] || [ -n "${FIREBASE_APP_ID_RELEASE}" ]; } \
             && { [ -n "${FIREBASE_SERVICE_ACCOUNT_JSON}" ] || [ -n "${FIREBASE_TOKEN}" ]; }; then
            if [ -n "${FIREBASE_SERVICE_ACCOUNT_JSON}" ]; then
              echo "$FIREBASE_SERVICE_ACCOUNT_JSON" > firebase-sa.json
              echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/firebase-sa.json" >> $GITHUB_ENV
            elif [ -n "${FIREBASE_TOKEN}" ]; then
              echo "FIREBASE_TOKEN=$FIREBASE_TOKEN" >> $GITHUB_ENV
            fi
          else
            echo "Skipping Firebase credentials configuration (missing app id or credentials)"
          fi

      - name: Distribute Debug to Firebase App Distribution
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_APP_ID_DEBUG: ${{ secrets.FIREBASE_APP_ID_DEBUG }}
          APP_DIST_GROUPS: ${{ secrets.APP_DIST_GROUPS }}
          APP_DIST_TESTERS: ${{ secrets.APP_DIST_TESTERS }}
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          APP_ID="${FIREBASE_APP_ID_DEBUG:-$FIREBASE_APP_ID}"
          if [ -n "$APP_ID" ] && { [ -n "${FIREBASE_SERVICE_ACCOUNT_JSON}" ] || [ -n "${FIREBASE_TOKEN}" ]; }; then
            RELEASE_NOTES="CI build ${GITHUB_RUN_NUMBER} (${GITHUB_SHA::7}) - debug"
            if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
              firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk \
                --app "$APP_ID" \
                ${APP_DIST_GROUPS:+--groups "$APP_DIST_GROUPS"} \
                ${APP_DIST_TESTERS:+--testers "$APP_DIST_TESTERS"} \
                --release-notes "$RELEASE_NOTES"
            else
              echo "Debug APK not found; skipping distribution"
            fi
          else
            echo "Skipping Debug distribution (missing app id or credentials)"
          fi

      - name: Distribute Release to Firebase App Distribution
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_APP_ID_RELEASE: ${{ secrets.FIREBASE_APP_ID_RELEASE }}
          APP_DIST_GROUPS: ${{ secrets.APP_DIST_GROUPS }}
          APP_DIST_TESTERS: ${{ secrets.APP_DIST_TESTERS }}
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          APP_ID="${FIREBASE_APP_ID_RELEASE:-$FIREBASE_APP_ID}"
          if [ -n "$APP_ID" ] && { [ -n "${FIREBASE_SERVICE_ACCOUNT_JSON}" ] || [ -n "${FIREBASE_TOKEN}" ]; }; then
            RELEASE_NOTES="CI build ${GITHUB_RUN_NUMBER} (${GITHUB_SHA::7}) - release"
            if [ -f app/build/outputs/apk/release/app-release.apk ]; then
              firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
                --app "$APP_ID" \
                ${APP_DIST_GROUPS:+--groups "$APP_DIST_GROUPS"} \
                ${APP_DIST_TESTERS:+--testers "$APP_DIST_TESTERS"} \
                --release-notes "$RELEASE_NOTES"
            else
              echo "Release APK not found; skipping distribution"
            fi
          else
            echo "Skipping Release distribution (missing app id or credentials)"
          fi
